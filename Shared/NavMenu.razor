
<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">BlazingShop</a>
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="@NavMenuCssClass nav-scrollable" @onclick="ToggleNavMenu">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="oi oi-home" aria-hidden="true"></span> Home
            </NavLink>
        </div>
        <div class=" px-3">
            <span class="oi oi-share-boxed text-light" aria-hidden="true"></span> <span class="badge text-center fs-4 text-light fw-bolder">Categories</span>
        </div>
        <link class="dropdown-divider" />
        @if (Categories != null)
        {
            @foreach (var category in Categories)
            {
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="@category.Id" Match="NavLinkMatch.All">
                        <span class="oi oi-@category.Icon" aria-hidden="true"></span> @category.Name
                    </NavLink>
                </div>
            }
        }
        else
        {
            <div class="spinner-grow"></div>
        }
    </nav>
</div>

@code {
    private bool collapseNavMenu = true;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }


    public IEnumerable<Category> Categories { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Categories = (await categoryService.GetAllCategories()).ToList();
    }
}

}
